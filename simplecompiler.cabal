name:                simplecompiler
version:             0.1.0.0
-- synopsis:
-- description:
homepage:            https://github.com/glaebhoerl/simplecompiler
license:             MIT
license-file:        LICENSE
author:              Gábor Lehel
maintainer:          glaebhoerl@gmail.com
copyright:           2017 Gábor Lehel
category:            Compilers
build-type:          Simple
cabal-version:       >=1.10
-- extra-source-files:  README.md

executable simplecompiler
  hs-source-dirs:      src
  main-is:             Main.hs
  other-modules:       MyPrelude, Pretty, Token, AST, Name, Type, IR, LLVM

-- Here we define the language dialect we will be using:
  default-language:    Haskell2010
  default-extensions:  AllowAmbiguousTypes,
--                     ^^^^^^^^^^^^^^^^^^^ sounds scary, but just means you can define functions which you need `TypeApplications` to use
                       ApplicativeDo,
                       AutoDeriveTypeable,
                       BangPatterns,
                       BinaryLiterals,
                       BlockArguments,
--                     ^^^^^^^^^^^^^^ <3
                       ConstrainedClassMethods,
                       ConstraintKinds,
                       DataKinds,
                       DefaultSignatures,
                       DeriveFoldable,
                       DeriveFunctor,
                       DeriveGeneric,
                       DeriveTraversable,
                       EmptyCase,
                       ExistentialQuantification,
                       FlexibleContexts,
                       FlexibleInstances,
                       GADTs,
                       GeneralizedNewtypeDeriving,
                       InstanceSigs,
                       KindSignatures,
                       LambdaCase,
--                     ^^^^^^^^^^ <3
                       MultiParamTypeClasses,
                       NamedFieldPuns,
                       NegativeLiterals,
                       NoImplicitPrelude,
--                     ^^^^^^^^^^^^^^^^^ `import MyPrelude` instead!
                       NumericUnderscores,
                       OverloadedStrings,
                       PartialTypeSignatures,
                       PatternSynonyms,
                       PolyKinds,
                       RankNTypes,
                       RecursiveDo,
                       ScopedTypeVariables,
                       StandaloneDeriving,
                       StrictData,
--                     ^^^^^^^^^^ NOTE!!
                       TupleSections,
                       TypeApplications,
                       TypeFamilies,
                       TypeOperators,
                       TypeSynonymInstances,
                       ViewPatterns

-- NOTABLY MISSING:
--     CPP, TemplateHaskell:
--         Would like to avoid these if at all possible. Use a local `LANGUAGE` pragma if/where we can't.
--     DeriveAnyClass:
--         Would be nice, but in GHC 8.0 it's badly implemented and conflicts with GeneralizedNewtypeDeriving.
--     FunctionalDependencies:
--         Use TypeFamilies instead.
--     OverloadedLists:
--         I got a type ambiguity error that I think was caused by this, and otherwise haven't needed it.
--     RecordWildCards:
--         Tryna keep it obvious where names are coming from.
--     RoleAnnotations:
--         Seems niche and it's quite possible we won't ever need it.
--     TypeInType:
--         Very new and fancy and powerful. Give it some time.
--     UndecidableInstances, UndecidableSuperClasses:
--         Not evil, but use a local `LANGUAGE` pragma to call it out if it's necessary.

  build-depends:       base >= 4.7 && < 5,
                       bytestring,
                       containers,
                       directory,
                       Earley,
                       generic-lens,
                       lexer-applicative,
                       llvm-hs,
                       llvm-hs-pure,
                       managed,
                       mtl,
                       pretty-simple,
                       prettyprinter,
                       prettyprinter-ansi-terminal,
                       process,
                       profunctors,
                       regex-applicative,
                       srcloc,
                       text
  ghc-options:         -O -W -Wall -Wcompat -Wincomplete-uni-patterns -Wincomplete-record-updates -Wredundant-constraints

source-repository head
  type:     git
  location: https://github.com/glaebhoerl/simplecompiler
